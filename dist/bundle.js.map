{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/constants.js","webpack:///./src/lib/utils.js","webpack:///./src/index.js","webpack:///./src/renderer.js","webpack:///./src/state.js","webpack:///./src/lib/GameObject.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","querySelector","context","getContext","CellType","GREEN","BLUE","EMPTY","RED","YELLOW","colors","CellFillColorMap","_defineProperty","_CellFillColorMap","BoundaryColor","blah","console","log","dimensions","BOARD_HEIGHT","BOARD_WIDTH","ROW_COUNT","COLUMN_COUNT","cellOffset","_constants","getCellColor","cellType","getCellHeight","getCellWidth","getUUID","replace","crypto","getRandomValues","Uint8Array","toString","_renderer","clearCanvas","renderBoard","_GameObject","width","height","GameObject","render","x","y","getBoardMask","state","rowIndex","row","colIndex","push","getSafeZoneMask","safeZoneMask","_utils","_classCallCheck","this","uuid","isRenderable","origin","setRenderOrigin","font","fillText"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","const canvas = document.querySelector(\".board\");\nconst context = canvas.getContext(\"2d\");\n\nconst CellType = {\n    GREEN: \"CellType::Green\",\n    BLUE: \"CellType::Blue\",\n    EMPTY: \"CellType::Empty\",\n    RED: \"CellType::Red\",\n    YELLOW: \"CellType::Yellow\"\n};\n\nconst dimensions = {\n    BOARD_HEIGHT: 600,\n    BOARD_WIDTH: 600,\n    ROW_COUNT: 15,\n    COLUMN_COUNT: 15,\n    cellOffset: 0\n};\n\nconst colors = {\n    CellFillColorMap: {\n        [CellType.GREEN]: \"#00FF00\",\n        [CellType.BLUE]: \"#0000FF\",\n        [CellType.EMPTY]: \"#FFFFFF\",\n        [CellType.RED]: \"#FF0000\",\n        [CellType.YELLOW]: \"#FFFF00\"\n    },\n    BoundaryColor: \"#000000\"\n};\n\nconst blah = () => console.log(\"BLAH\");\n\nexport {\n    blah,\n    canvas,\n    CellType,\n    colors,\n    context,\n    dimensions\n};\n","import {\n    colors,\n    dimensions\n} from \"../constants\";\n\nconst {\n    BOARD_HEIGHT,\n    BOARD_WIDTH,\n    ROW_COUNT,\n    COLUMN_COUNT\n} = dimensions;\n\nconst getCellHeight = () => BOARD_HEIGHT / ROW_COUNT;\nconst getCellWidth = () => BOARD_WIDTH / COLUMN_COUNT;\n\nconst getUUID = () => {\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16) // eslint-disable-line no-bitwise, no-mixed-operators\n    );\n};\n\nconst getCellColor = cellType => colors.CellFillColorMap[cellType];\n\nexport {\n    getCellColor,\n    getCellHeight,\n    getCellWidth,\n    getUUID\n};\n","import {\n    clearCanvas,\n    renderBoard\n} from \"./renderer\";\n\nclearCanvas();\nrenderBoard();\n","import { canvas, colors, context, dimensions } from \"./constants\";\nimport { getCellHeight, getCellWidth, getCellColor } from \"./lib/utils\";\nimport { getBoardMask, getSafeZoneMask } from \"./state\";\nimport GameObject from \"./lib/GameObject\";\n\nconst {\n    ROW_COUNT,\n    COLUMN_COUNT\n} = dimensions;\n\nconsole.log(dimensions);\n\nconst clearCanvas = () => {\n    canvas.width = canvas.width;\n    canvas.height = canvas.height;\n};\n\nconst renderCell = (left, top, width, height, color) => {\n    context.beginPath();\n    context.lineWidth = 1;\n    context.strokeStyle = colors.BoundaryColor;\n    context.strokeRect(left, top, width, height);\n\n    context.beginPath();\n    context.fillStyle = color;\n    context.fillRect(left, top, width, height);\n};\n\nconst renderSafeCircle = (left, top, width) => {\n    const radius = width / 2;\n    const centerX = left + radius;\n    const centerY = top + radius;\n    context.beginPath();\n    context.fillStyle = colors.BoundaryColor;\n    context.arc(centerX, centerY, radius * 0.8, 0, 6);\n    context.fill();\n};\n\nconst renderBoard = () => {\n    // const cellHeight = getCellHeight();\n    // const cellWidth = getCellWidth();\n    // const boardMask = getBoardMask();\n    // const safeZoneMask = getSafeZoneMask();\n\n    const gameObject = new GameObject(canvas);\n    gameObject.render({ x: 30, y: 30 });\n\n    // let top = 0;\n    // for (let rowIndex = 0; rowIndex < ROW_COUNT; rowIndex++) {\n    //     let left = 0;\n    //     for (let colIndex = 0; colIndex < COLUMN_COUNT; colIndex++) {\n    //         renderCell(\n    //             context,\n    //             left,\n    //             top,\n    //             cellWidth,\n    //             cellHeight,\n    //             getCellColor(boardMask[rowIndex][colIndex])\n    //         );\n    //         if (safeZoneMask[rowIndex][colIndex]) {\n    //             renderSafeCircle(\n    //                 context,\n    //                 left,\n    //                 top,\n    //                 cellWidth,\n    //                 cellHeight,\n    //                 getCellColor(boardMask[rowIndex][colIndex])\n    //             );\n    //         }\n    //         left += cellWidth;\n    //     }\n    //     top += cellHeight;\n    // }\n};\n\nexport {\n    clearCanvas,\n    renderBoard\n};\n","import {\n    CellType,\n    dimensions\n} from \"./constants\";\n\nconst {\n    ROW_COUNT,\n    COLUMN_COUNT\n} = dimensions;\n\nconst getBoardMask = () => {\n    const state = [];\n\n    for (let rowIndex = 0; rowIndex < ROW_COUNT; rowIndex++) {\n        const row = [];\n        for (let colIndex = 0; colIndex < COLUMN_COUNT; colIndex++) {\n            row.push(CellType.EMPTY);\n        }\n        state.push(row);\n    }\n\n    let rowIndex = 0;\n    let colIndex = 0;\n\n    // Row 1\n    rowIndex += 2;\n    state[rowIndex][colIndex += 2] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n\n    // Row 2\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n\n    // Row 3\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n\n    // Row 4\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 2] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n    state[rowIndex][colIndex += 1] = CellType.BLUE;\n\n    // Row 5\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.GREEN;\n    state[rowIndex][colIndex += 5] = CellType.BLUE;\n\n    // Row 6\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 1] = CellType.GREEN;\n    state[rowIndex][colIndex += 2] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 7] = CellType.RED;\n    state[rowIndex][colIndex += 5] = CellType.YELLOW;\n\n    // Row 8\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n\n    // Row 9\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n\n    // Row 10\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n\n    rowIndex += 1;\n    colIndex = 0;\n    state[rowIndex][colIndex += 2] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 1] = CellType.RED;\n    state[rowIndex][colIndex += 2] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n    state[rowIndex][colIndex += 1] = CellType.YELLOW;\n\n\n    return state;\n};\n\nconst getSafeZoneMask = () => {\n    const safeZoneMask = [];\n\n    for (let rowIndex = 0; rowIndex < ROW_COUNT; rowIndex++) {\n        const row = [];\n        for (let colIndex = 0; colIndex < COLUMN_COUNT; colIndex++) {\n            row.push(false);\n        }\n        safeZoneMask.push(row);\n    }\n\n    let rowIndex = 0;\n    let colIndex = 0;\n\n    // Row 1\n    rowIndex += 2;\n    safeZoneMask[rowIndex][colIndex += 7] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    // Row 2\n    rowIndex += 1;\n    colIndex = 0;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    // Row 3\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 2] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    // Row 4\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 7] = true;\n\n    // Row 5\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 2] = true;\n    safeZoneMask[rowIndex][colIndex += 5] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n\n    // Row 6\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 2] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 2] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    // Row 7\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 4] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 5] = true;\n\n    // Row 8\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 7] = true;\n\n    // Row 9\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 2] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    // Row 10\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 3] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    // Row 11\n    colIndex = 0;\n    rowIndex += 1;\n    safeZoneMask[rowIndex][colIndex += 6] = true;\n    safeZoneMask[rowIndex][colIndex += 1] = true;\n\n    return safeZoneMask;\n};\n\nexport {\n    getBoardMask,\n    getSafeZoneMask\n};\n","import { getUUID } from \"./utils\";\n\nexport default class GameObject {\n    constructor(canvas) {\n        this.uuid = getUUID();\n        this.isRenderable = true;\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n    }\n\n    setRenderOrigin(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    render(origin) { // eslint-disable-line class-methods-use-this\n        this.setRenderOrigin(origin);\n        this.context.font = \"30px Arial\";\n        this.context.fillText(\"Child class must override this function.\", this.x, this.y);\n    }\n}\n"],"sourceRoot":""}